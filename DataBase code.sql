
SELECT * FROM История_операций
SELECT * FROM Клиенты
SELECT * FROM Недвижимость
SELECT * FROM Клиент_недвижимость
SELECT * FROM Операции 
SELECT * FROM Сотрудники


-- Создание базы данных Агенство_Недвижимости
CREATE DATABASE Агенство_Недвижимости;
-------------------------------------------------------------------------------------------------------------------------


-- 1. Создание таблицы Клиенты.
CREATE TABLE Клиенты
(
	klient_id INTEGER NOT NULL,
	ФИО VARCHAR(50) NOT NULL,
	Дата_рождения DATE NOT NULL,
	Номер_телефона VARCHAR(30),
	--Проверка ввода номера телефона:
	CONSTRAINT Номер_телефона CHECK (Номер_телефона LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'),
	CONSTRAINT pk_klient_id PRIMARY KEY (klient_id), --Назначение первичного ключа
);

-- Заполнение таблицы Клиенты данными.
insert into Клиенты values
			(1, 'Зарипов Алмаз Фиргатович', '1995-03-20', '89313138743'),
			(2, 'Дашдамирова Назрин Расул кызы', '1978-11-03', '89467132222'),
			(3, 'Мурзакова Юлия Ильинична', '1933-07-24',  '89876928320'),
			(4, 'Хасанова Милена Наилевна', '1999-10-13',  '89724699977'),
			(5, 'Губайдуллин Рамиль Ринатович', '1961-10-19', '89568822211'),
			(6, 'Муратова Алсу Айратовна', '2001-01-05', '89238000971'),
			(7, 'Стришкова Ксения Павловна', '1989-12-14', '89279398956'),
			(8, 'Фазуллин Альберт Ильшатович', '1995-08-23', '89873488821'),
			(9, 'Шафиков Владислав Азаматович', '1958-11-01', '89893471190'),
			(10, 'Дубовик Ангелина Владиславовна', '1973-09-30',  '89465729164'),
			(11, 'Киреева Малика Муратовна', '1984-04-29', '89123453234');
-------------------------------------------------------------------------------------------------------------------------


-- 2. Создание таблицы Недвижимость.
CREATE TABLE Недвижимость
(
	nedvizhimost_id INTEGER NOT NULL,
	Наименование_недвижимости VARCHAR(32) NOT NULL,
	Площадь FLOAT NOT NULL,
	Район VARCHAR(50) NOT NULL,
	Адрес VARCHAR(64) NOT NULL,
	Этаж INTEGER NOT NULL,
	Балкон VARCHAR(64) NOT NULL,
	Стоимость INTEGER NOT NULL,
	CONSTRAINT pk_nedvizhimost_id PRIMARY KEY (nedvizhimost_id) --Назначение первичного ключа
);

-- Заполнение таблицы Недвижимость данными.
insert into Недвижимость values
			(1, '3-комнатная квартира', 60.6,'Октябрьский', 'ул. Российская, д. 43 к2', 8, 'Да', 8700300),
			(2, '4-комнатная квартира', 95.4,'Октябрьский', 'ул. Набережная р. Уфы, д. 43', 4, 'Да', 13543000),
			(3, 'Студия', 26.7,'Ленинский', 'ул. Природная, д. 20', 2, 'Да', 3050900),
			(4, '1-комнатная квартира', 31,'Калининский', 'ул. Кольцевая, д. 205 к1', 7, 'Нет', 15000),
			(5, '2-комнатная квартира', 44.7,'Советский', 'ул. Рихарда Зорге, д. 45 к5', 3, 'Да', 25700),
			(6, '2-комнатная квартира', 42.4,'Кировский', 'ул. Октябрьской Революции, д. 73', 5, 'Нет', 19800),
			(7, '3-комнатная квартира', 134.4,'Кировский', 'ул. Октябрьской Революции, д. 54а', 2, 'Да', 6700700),
			(8, '2-комнатная квартира', 44.5,'Орджоникидзевский', 'ул. Свободы, д. 38 к1', 1, 'Да', 25500),
			(9, '2-комнатная квартира', 54.8,'Октябрьский', 'ул. Рудольфа Нуреева, д. 10', 18, 'Нет', 5400000),
			(10, '1-комнатная квартира', 38.24,'Демский', 'ул. Мечтателей, д. 6', 8, 'Да', 13200),
			(11, 'Студия', 42.2,'Ленинский', 'ул. Султанова, д. 10', 10, 'Нет', 15800);
-------------------------------------------------------------------------------------------------------------------------


-- 3. Создание таблицы Клиент_недвижимость.
create table Клиент_недвижимость
(
	klient_id int foreign key references Клиенты(klient_id),--Назначение вторичного ключа для табл.Клиенты (связь М:М)
	nedvizhimost_id int foreign key references Недвижимость(nedvizhimost_id),--Назначение вторичного ключа для табл.Недвижимость (связь М:М)
	primary key(klient_id, nedvizhimost_id)--Назначение первичного ключа
)

-- Заполнение таблицы Клиент_недвижимость данными.
insert into Клиент_недвижимость values 
									(1, 2),
									(1, 3),
									(2, 4),
									(2, 5),
									(3, 7),
									(4, 11),
									(5, 6),
									(6, 1),
									(7, 10),
									(8, 3),
									(9, 8),
									(9, 4),
									(10, 9),
									(11, 5);
-------------------------------------------------------------------------------------------------------------------------


-- 4. Создание таблицы Операции.
CREATE TABLE Операции
(
	operaci_id INTEGER NOT NULL,
	Наименование_операции VARCHAR(32) NOT NULL,
	CONSTRAINT pk_operaci_id PRIMARY KEY (operaci_id), --Назначение первичного ключа
	klient_id INT FOREIGN KEY REFERENCES Клиенты(klient_id) --Назначение вторичного ключа для табл.Клиенты (связь 1:М)
);

-- Заполнение таблицы Операции данными.
insert into Операции values
			(1, 'Продажа', 3),
			(2, 'Покупка', 1),
			(3, 'Аренда', 4),
			(4, 'Продажа', 2),
			(5, 'Покупка', 2),
			(6, 'Аренда', 7),
			(7, 'Покупка', 1),
			(8, 'Аренда', 5),
			(9, 'Аренда', 8),
			(10, 'Аренда', 9),
			(11, 'Аренда', 11),
			(12, 'Продажа', 10),
			(13, 'Покупка', 9),
			(14, 'Продажа', 6);
-------------------------------------------------------------------------------------------------------------------------


-- 5. Создание таблицы Сотрудники
CREATE TABLE Сотрудники 
(
	sotrudnik_id INTEGER NOT NULL,
	ФИО VARCHAR(50) NOT NULL,
	Дата_рождения DATE NOT NULL,
	Пасспортные_данные BIGINT NOT NULL,
	Должность VARCHAR(50) NOT NULL,
	Номер_телефона_сотрудника VARCHAR(30),
	CONSTRAINT Номер_телефона_сотрудника CHECK (Номер_телефона_сотрудника LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'),
	CONSTRAINT pk_sotrudnik_id PRIMARY KEY (sotrudnik_id), --Назначение первичного ключа
	klient_id INT FOREIGN KEY REFERENCES Клиенты(klient_id) --Назначение вторичного ключа для табл.Клиенты (связь 1:М)
);

-- Заполнение таблицы Сотрудники данными.
insert into Сотрудники values
			(1, 'Дорченкова Алина Александровна', '1967-03-20', 8011937205, 'Агент по аренде недвижимости', '89313139603', 7),
			(2, 'Иванова Елизавета Михайловна', '1978-11-03', 8013230958, 'Агент по осмотру недвижимости', '89467135736', 5),
			(3, 'Карпенко Павел Олегович', '1963-07-24', 8014982357, 'Оператор колл-центра', '89876921757', 6),
			(4, 'Неводова Елизавета Артуровна', '1990-10-13', 8013938757, 'Администратор', '89724690909', 1),
			(5, 'Овчинникова Софья Андреевна', '1961-10-19', 8015942832, 'Агент по аренде недвижимости', '89568826371', 9),
			(6, 'Самбуев Салдар Баирович', '1988-01-05', 8017928763, 'Оператор колл-центра', '89238001233', 2),
			(7, 'Становая Валерия Дмитриевна', '1989-12-14', 8011966887, 'Агент по аренде недвижимости', '89279393790', 8),
			(8, 'Сылка Валерия Александровна', '1995-08-23', 8015935809, 'Оператор колл-центра ', '89873482865', 4),
			(9, 'Теперин Артём Вячеславович', '1958-11-01', 8012384567, 'Агент по продажам недвижимости', '89893475684', 10),
			(10, 'Фролова Алина Игоревна', '1973-09-30', 8012895371, 'Оператор колл-центра', '89465728334', 11),
			(11, 'Яцкив Адель Юрьевна', '1976-04-29', 8017638922, 'Оператор колл-центра', '89123456748', 3);

--ЗАПРОСЫ
--1
SELECT nedvizhimost_id, 
Наименование_недвижимости, Площадь
FROM Недвижимость

--2
UPDATE Сотрудники SET Должность = 'Помощник оператора колл-центра'
WHERE ФИО = 'Карпенко Павел Олегович';

--3
SELECT ФИО, Пасспортные_данные, Номер_телефона_сотрудника
FROM Сотрудники

--ФИЛЬТРЫ
--1.Вывести данные об 1-комнатных квартирах
SELECT nedvizhimost_id, Наименование_недвижимости, 
Площадь, Район,
Адрес, Этаж
FROM Недвижимость
WHERE Наименование_недвижимости = '1-комнатная квартира';

--2.Вывести данные о клиентах, операции и квартирах, стоимость которых превышают 6000000
SELECT DISTINCT Клиенты.ФИО, Клиенты.Номер_телефона, 
Операции.Наименование_операции, Недвижимость.Наименование_недвижимости,
Недвижимость.Площадь, Недвижимость.Стоимость
FROM Клиенты, Операции, Недвижимость, Клиент_недвижимость
WHERE (Недвижимость.Стоимость > 6000000)
AND Клиенты.klient_id = Операции.klient_id
AND Операции.klient_id = Клиент_недвижимость.klient_id 
AND Клиент_недвижимость.nedvizhimost_id = Недвижимость.nedvizhimost_id;

--3.Вывести данные о квартирах, которые находятся выше 5 этажа
SELECT nedvizhimost_id, Наименование_недвижимости, 
Площадь, Район,
Адрес, Этаж
FROM Недвижимость
WHERE (Этаж > 5);

--4.Вывести информацию о клиентах, сотрудниках, операции и недвижимости, которая продавалась
SELECT Клиенты.ФИО as 'Имя клиента', Клиенты.Номер_телефона as 'Телефон клиента', 
Операции.Наименование_операции, Недвижимость.Наименование_недвижимости
FROM Операции, Клиенты, Недвижимость, Клиент_недвижимость
WHERE (Операции.Наименование_операции = 'Продажа') 
AND Клиенты.klient_id = Операции.klient_id
AND Операции.klient_id = Клиент_недвижимость.klient_id 
AND Клиент_недвижимость.nedvizhimost_id = Недвижимость.nedvizhimost_id
ORDER BY Клиенты.klient_id;

--ХРАНИМЫЕ ПРОЦЕДУРЫ
--1
CREATE PROCEDURE HranProc_1 
    @VvodCena1 FLOAT,--Ввод нижней границы цены 
    @VvodCena2 FLOAT --Ввод верхней границы цены
AS
SELECT DISTINCT 
	Клиенты.ФИО, 
	Клиенты.Номер_телефона, 
	Операции.Наименование_операции, 
	Недвижимость.Наименование_недвижимости,
	Недвижимость.Площадь, Недвижимость.Стоимость
	FROM Клиенты, Операции, Недвижимость, Клиент_недвижимость
	WHERE (Недвижимость.Стоимость BETWEEN @VvodCena1 AND @VvodCena2)
	AND Клиенты.klient_id = Операции.klient_id
	AND Операции.klient_id = Клиент_недвижимость.klient_id 
	AND Клиент_недвижимость.nedvizhimost_id = Недвижимость.nedvizhimost_id;

--2
CREATE PROCEDURE HranProc_2 
    @VvodNedviz VARCHAR --Ввод нижней границы цены 
AS
SELECT nedvizhimost_id, Наименование_недвижимости, 
    Площадь, Район,
    Адрес, Этаж
    FROM Недвижимость
    WHERE Наименование_недвижимости = @VvodNedviz;

--3
CREATE PROCEDURE HranProc_3 
    @VvodCena FLOAT --Ввод нижней границы цены 
AS
SELECT DISTINCT Клиенты.ФИО, Клиенты.Номер_телефона, 
    Операции.Наименование_операции, Недвижимость.Наименование_недвижимости,
    Недвижимость.Площадь, Недвижимость.Стоимость
    FROM Клиенты, Операции, Недвижимость, Клиент_недвижимость
    WHERE (Недвижимость.Стоимость > @VvodCena)
    AND Клиенты.klient_id = Операции.klient_id
    AND Операции.klient_id = Клиент_недвижимость.klient_id 
    AND Клиент_недвижимость.nedvizhimost_id = Недвижимость.nedvizhimost_id;

--ФУНКЦИИ
--1
SELECT COUNT(*) 
FROM Операции WHERE Наименование_операции = 'Продажа';

--2
SELECT AVG(Площадь) 
FROM Недвижимость;

--3
SELECT SUM(DISTINCT Стоимость) 
FROM Недвижимость; 

--ТРИГГЕРЫ
--1
--При обновлении записи в табл.Недвижимость триггер добавляет комиссию
CREATE TRIGGER Недвижимость_INSERT_UPDATE
ON Недвижимость
AFTER INSERT, UPDATE
AS
UPDATE Недвижимость
SET Стоимость = Стоимость + Стоимость * 0.04
WHERE nedvizhimost_id = (SELECT nedvizhimost_id FROM inserted);

INSERT INTO Недвижимость
VALUES(12, '5-комнатная квартира', 140.6,'Кировский', 'ул. Октябрьской Революции, д. 54а', 2, 'Да', 14000800);

--2
--Таблица истории операций с таблицей Недвижимость
CREATE TABLE История_операций
(
    Id INT IDENTITY PRIMARY KEY,
    nedvizhimost_id INT FOREIGN KEY REFERENCES Недвижимость(nedvizhimost_id),--Назначение вторичного ключа для табл.Клиенты (связь 1:М),
    Операция NVARCHAR(200) NOT NULL,
    Дата_операции DATETIME NOT NULL DEFAULT GETDATE(),
);

--При добавлении новой записи в табл.Недвижимость триггер записывает операцию в историю
CREATE TRIGGER Недвижимость_INSERT
ON Недвижимость
AFTER INSERT
AS
INSERT INTO История_операций (nedvizhimost_id, Операция)
SELECT nedvizhimost_id, 'Добавлена недвижимость ' + Наименование_недвижимости + ' стоимость ' + Стоимость
FROM INSERTED

--Добавим запись в табл.Недвижимость
INSERT INTO Недвижимость
VALUES(13, '6-комнатная квартира', 160.6,'Октябрьский', 'ул. Российская, д. 67 к2', 22, 'Да', 16700300)
 
--Проверим табл.История
SELECT * FROM История_операций


--3
--При обновлении записи в табл.Недвижимость триггер записывает операцию в историю
CREATE TRIGGER Недвижимость_UPDATE
ON Недвижимость
AFTER UPDATE
AS
INSERT INTO История_операций (nedvizhimost_id, Операция)
SELECT nedvizhimost_id, 'Обновлен товар ' + Наименование_недвижимости + ' стоимость ' + Стоимость
FROM INSERTED

--Обновим запись в табл.Недвижимость
UPDATE Недвижимость SET Наименование_недвижимости = '5-комнатная квартира'
WHERE Наименование_недвижимости = '6-комнатная квартира';


--4
--При удалении записи в табл.Недвижимость триггер записывает операцию в историю
CREATE TRIGGER Недвижимость_DELETE
ON Недвижимость
AFTER DELETE
AS
INSERT INTO История_операций (nedvizhimost_id, Операция)
SELECT nedvizhimost_id, 'Удален товар ' + Наименование_недвижимости + ' стоимость ' + Стоимость
FROM DELETED

--Удалим запись в табл.Недвижимость
DELETE FROM Недвижимость
WHERE nedvizhimost_id = 12 AND nedvizhimost_id = 13;

--Проверим табл.История
SELECT * FROM История_операций


